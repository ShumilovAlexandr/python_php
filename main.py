import datetime

from aiogram import (executor,
                     types)
from dotenv import load_dotenv
from sqlalchemy import (insert,
                        select)

from app.databases.db import session
from app.databases.tables import Users
from app.loader import dp


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    """
    –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±–æ—Ç–∞.

    –¢—É—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –µ—Å–ª–∏ –æ–Ω
    —Ä–∞–Ω–µ–µ –Ω–µ –æ–±—Ä–∞—â–∞–ª—Å—è –≤ –±–æ—Ç.
    """
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    chat_id = message.chat.id
    keyboard = types.ReplyKeyboardMarkup(input_field_placeholder="–í—ã–±–µ—Ä–∏ –≤ "
                                                                 "–º–µ–Ω—é –Ω–∏–∂–µ —ç–∫—Ä–∞–Ω–∞ "
                                                                 "–∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å —Ä–∞–∑–¥–µ–ª",
                                         one_time_keyboard=False)
    # –ö–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–ª—è—Ç—å –∏—Ö –≤ –≤—ã–≤–æ–¥ –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
    new = types.KeyboardButton(text="üî• –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑", callback_data="new")
    my_orders = types.KeyboardButton(text="üíπ –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_orders")
    my_balance = types.KeyboardButton(text="üíº –ú–æ–π –±–∞–ª–∞–Ω—Å", callback_data="my_balance")
    make_money= types.KeyboardButton(text="üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å", callback_data="make_money")
    support = types.KeyboardButton(text="üí° –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")
    faq = types.KeyboardButton(text="üì¢ FAQ", callback_data="faq")

    # –î–æ–±–∞–≤–ª—è—é –∫–Ω–æ–ø–∫–∏ –≤ –≤—ã–≤–æ–¥
    keyboard.add(new)
    keyboard.add(my_orders, my_balance)
    keyboard.add(make_money, support, faq)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    request_users = select(Users).where(Users.chat_id == chat_id)
    row = session.execute(request_users).fetchone()
    # –∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–∞–∫–æ–≥–æ –Ω–µ—Ç, —Ç–æ –∑–∞–Ω–æ—Å–∏–º –µ–≥–æ –≤ –ë–î
    if not row:
        data = {
            "chat_id": chat_id,
            "first_name": first_name,
            "last_name": last_name,
            "username": message.from_user.username,
            "registration_date": datetime.datetime.now().date()
        }
        stmt = insert(Users).values(data)
        session.execute(stmt)
        session.commit()

    await message.answer(text="–í—ã–±–µ—Ä–∏ –≤ –º–µ–Ω—é –Ω–∏–∂–µ —ç–∫—Ä–∞–Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π "
                              "–í–∞—Å —Ä–∞–∑–¥–µ–ª: ", reply_markup=keyboard)


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
